#+TITLE: Notes
* Determining Minimum Animation Interval
- In order to determine the minimum interval rate, I need to measure how long it takes to complete a single animation update. A single animation update consists of updating 4 plots, using 4 animation functions. Here is a description of each function:
  - animateTemperaturePlot:
    - gets current cpu temperature through func call CPUTemperature(), appends to list
    - gets/formats current time, appends to list
    - clears subplot
    - re plots subplot
    - I clocked this and took and average after 100 runs and found that the average time for this function is approximately .1 seconds
  - animateFreqPlot
    - gets current frequency through subprocess call, appends to list
    - clears subplot
    - re plots subplot
  - animateVoltageFrequencyPlot
  - animateTemperatureFrequencyPlot
- Works at 500
- Works at 250
- Does not work at 125
- Does not work at 200
- Does not work at 225
* Benchmark Results (from performance/run)
The C/C++ Code Example
-0.169075164
-0.169083134
It took 1818 milliseconds to run the C/C++ test

The C++11 Code Example
-0.169075164
-0.169083134
It took 1333 milliseconds to run the C++11 test

The Node.js Example
Argument Passed: 5000000
Out:-0.169075164
Out:-0.169083134
It took 5942 milliseconds to run the Node.js test

The Java Example
OpenJDK Server VM warning: Option AggressiveOpts was deprecated in version 11.0 and will likely be removed in a future release.
-0.169075164
-0.169083134
It took 2459 milliseconds to run the Java test

The Lua Example
-0.169075164
-0.169083134
It took 71849 milliseconds to run the Lua test

The Perl Code Example
-0.169075164
-0.169083134
It took 154990 milliseconds to run the Perl test

The Python Code Example
-0.169075164
-0.169083134
It took 159005 milliseconds to run the Python test

The Ruby Code Example
-0.169075164
-0.169083134
It took 240556 milliseconds to run the Ruby test
Finished Running the Benchmarks
* Benchmark Results (submission data)
 | Language | On-demand | Performance | Powersave |
 |----------+-----------+-------------+-----------|
 | C/C++    |      1.81 |        1.76 |      4.40 |
 | C++11    |      1.34 |        1.34 |      3.34 |
 | Haskell  |      2.65 |        2.65 |      6.62 |
 | Java     |      4.91 |        4.85 |     11.56 |
 | Python   |    158.68 |      162.03 |    406.01 |
